{"version":3,"sources":["components/OsInfo.js","components/IpInfo.js","components/TimeZone.js","App.js","reportWebVitals.js","index.js"],"names":["OsInfo","OS","window","navigator","oscpu","toString","resolution","screen","width","height","IpInfo","useState","machineIp","setMachineIp","getIp","a","fetch","conn","json","data","ip","console","log","useEffect","TimeZone","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAceA,MAdf,WAEI,IAAIC,EAAKC,OAAOC,UAAUC,MAAMC,WAC5BC,EAAaJ,OAAOK,OAAOC,MAAMH,WAAa,IAAMH,OAAOK,OAAOE,OAAOJ,WAG7E,OACI,qCACI,sCAASJ,KACT,qDAAwBK,S,8BC6BrBI,MApCf,WAAkB,IAAD,EAEqBC,qBAFrB,mBAENC,EAFM,KAEKC,EAFL,KAIPC,EAAK,uCAAG,8BAAAC,EAAA,+EAIaC,MAAM,qCAJnB,cAIAC,EAJA,gBAKaA,EAAKC,OALlB,OAKAC,EALA,OAONN,EAAaM,EAAKC,IAClBC,QAAQC,IAAIH,GARN,kDAYNE,QAAQC,IAAR,MAZM,0DAAH,qDAwBX,OALAC,qBAAW,WACPT,MACD,IAIC,mCACI,8CAAiBF,QCxBdY,MARf,WAEI,IAAIC,EAAWC,KAAKC,iBAAiBC,kBAAkBC,SACvD,OACI,iDAAoBJ,MCabK,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8a3fbbc.chunk.js","sourcesContent":["function OsInfo(){\r\n\r\n    let OS = window.navigator.oscpu.toString();\r\n    let resolution = window.screen.width.toString() + \"x\" + window.screen.height.toString();\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h1>OS: {OS}</h1>\r\n            <h1>Screen resolution: {resolution}</h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OsInfo;","import { useEffect, useState } from \"react\";\r\n\r\nfunction IpInfo(){\r\n\r\n    const [machineIp, setMachineIp] = useState();\r\n\r\n    const getIp = async() => {\r\n        \r\n        try{\r\n\r\n            const conn = await fetch('https://api.ipify.org?format=json');\r\n            const data = await conn.json();\r\n\r\n            setMachineIp(data.ip);\r\n            console.log(data);\r\n        }\r\n\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    \r\n    //Fetch data\r\n\r\n    useEffect( () => {\r\n        getIp();\r\n    }, []);\r\n    \r\n\r\n    return(\r\n        <>\r\n            <h1>IP Address: {machineIp}</h1>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IpInfo;","function TimeZone(){\r\n\r\n    let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n    return(\r\n        <h1>Your Timezone: {timezone}</h1>\r\n    );\r\n}\r\n\r\nexport default TimeZone;","import './App.css';\n\n//Components\nimport OsInfo from './components/OsInfo';\nimport IpInfo from './components/IpInfo';\nimport TimeZone from './components/TimeZone';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OsInfo />\n      <IpInfo />\n      <TimeZone />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}